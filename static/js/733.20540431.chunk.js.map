{"version":3,"file":"static/js/733.20540431.chunk.js","mappings":"2QAEaA,EAAWC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2hB,mBCoBlC,EAhBiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAArBF,KACR,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,YAAWH,SAAC,cAGxBF,EAAAA,EAAAA,MAACT,EAAQ,CAAAW,SAAA,EACPC,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,KACJM,EAAAA,EAAAA,KAAA,UAAQG,QAAS,kBAAMX,GAASY,EAAAA,EAAAA,MAAS,EAACL,SAAC,iBAInD,ECnBaM,EAAYhB,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yFCwBlC,EAtBiB,WACf,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,IAAGH,SAAC,UAGhBF,EAAAA,EAAAA,MAACQ,EAAS,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,YAAWH,SAAC,gBAI1BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAG,SAAQH,SAAC,iBAO/B,E,UC4BA,EA1Ce,WACb,IAAMO,GAAaX,EAAAA,EAAAA,IAAYY,EAAAA,IACzBC,GAAYb,EAAAA,EAAAA,IAAYc,EAAAA,IAE9BC,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,IAE1CI,EAAAA,EAAAA,YAAU,WAIR,OAHAD,GAAmB,GAEnBE,OAAOC,iBAAiB,SAAUC,GAC3B,WAELF,OAAOG,oBAAoB,SAAUD,EACvC,CACF,GAAG,IAEH,IAAMA,EAAe,WACnB,IAAME,EAAiBJ,OAAOK,QAI5BP,EAFEM,GAAkB,GAAKA,GAAkB,GAO/C,EAEA,OACExB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQuB,UAAS,UAAAC,OAAYV,EAAkB,UAAY,UAAWf,UACpEC,EAAAA,EAAAA,KAAA,OAAAD,UACGC,EAAAA,EAAAA,KAAA,OAAAD,SAAMO,GAAaN,EAAAA,EAAAA,KAACyB,EAAQ,KAAMzB,EAAAA,EAAAA,KAAC0B,EAAQ,WAGhD1B,EAAAA,EAAAA,KAAA,QAAAD,SACGS,GAAYR,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,KAAM3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,QAI1C,C,wGCjDO,IAAMrB,EAAmB,SAAAsB,GAAK,OAAIA,EAAMC,KAAKxB,UAAW,EAClDG,EAAgB,SAAAoB,GAAK,OAAIA,EAAMC,KAAKtB,SAAU,EAG9CZ,EAAa,SAAAiC,GAAK,OAAIA,EAAMC,KAAKC,IAAK,C","sources":["components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/Menu/Menu.styled.js","components/Menu/Menu.jsx","components/Header/Header.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DivStyle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.8em;\n  margin-left: auto;\n\n  p {\n    border: 1px solid #000;\n    border-radius: 1em;\n    padding: 0.2em 0.5em;\n    transition: 1s;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n      transition: 1s;\n    }\n  }\n\n   button {\n    transition: 0.8s; \n    width: 120px;\n    height: 50px;\n    padding: 0.3em 0.3em;\n    border: black solid 1px;\n    border-radius: 30px;\n    background-color: transparent;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'redux/auth/auth';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { DivStyle } from './UserMenu.styled';\nimport { NavLink } from 'react-router-dom';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(selectUser);\n  return (\n    <>\n      <NavLink to=\"/contacts\">\n        Contacts\n      </NavLink>\n      <DivStyle>\n        <p>{name}</p>\n        <button onClick={() => dispatch(logOut())}>Log out</button>\n      </DivStyle>\n    </>\n  );\n};\n\nexport default UserMenu;\n","import styled from 'styled-components';\nexport const ListStyle = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 1.5em;\n  margin-left: auto;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { ListStyle } from './Menu.styled';\n\nconst AuthMenu = () => {\n  return (\n    <>\n      <NavLink to=\"/\">\n        Home\n      </NavLink>\n      <ListStyle>\n        <li>\n          <NavLink to=\"/register\">\n            Register\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/login\">\n            Login\n          </NavLink>\n        </li>\n      </ListStyle>\n    </>\n  );\n};\n\nexport default AuthMenu;\n","import React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn, selectLoading } from 'redux/auth/authSelectors';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport AuthMenu from 'components/Menu/Menu';\nimport Loading from 'components/Loading/Loading';\nimport './Header.css';\n\nconst Header = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isLoading = useSelector(selectLoading);\n\n  const [isHeaderVisible, setIsHeaderVisible] = useState(false);\n\n  useEffect(() => {\n    setIsHeaderVisible(true);\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const scrollPosition = window.scrollY;\n\n    if (scrollPosition >= 0 && scrollPosition <= 25) {\n\n      setIsHeaderVisible(true);\n    } else {\n\n      setIsHeaderVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <header className={`header ${isHeaderVisible ? 'visible' : 'hidden'}`}>\n        <div>\n          {<nav>{isLoggedIn ? <UserMenu /> : <AuthMenu />}</nav>}\n        </div>\n      </header>\n      <main>\n        {isLoading ? <Loading /> : <Outlet />}\n      </main>\n    </>\n  );\n};\n\nexport default Header;\n","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectLoading = state => state.auth.isLoading;\nexport const selectError = state => state.auth.error;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["DivStyle","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","name","useSelector","selectUser","_jsxs","_Fragment","children","_jsx","NavLink","to","onClick","logOut","ListStyle","isLoggedIn","selectIsLoggedIn","isLoading","selectLoading","_useState","useState","_useState2","_slicedToArray","isHeaderVisible","setIsHeaderVisible","useEffect","window","addEventListener","handleScroll","removeEventListener","scrollPosition","scrollY","className","concat","UserMenu","AuthMenu","Loading","Outlet","state","auth","user"],"sourceRoot":""}